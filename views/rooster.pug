doctype html
head
  meta(charset='UTF-8')
  meta(http-equiv='X-UA-Compatible' content='IE=edge')
  meta(name='viewport' content='width=device-width, initial-scale=1.0')
  title Reset wachtwoord
  link(rel='stylesheet' href='./styles/style.css')
.nav-menu
  a.nav-home(href='index.html')
    h1.nav-heading Vierkante Wielen
.content
  .content-section-rooster
    .rooster-part.rooster-menu
    .rooster-part.rooster-rooster
    .rooster-part.rooster-extra
      button#openModal Plan een les
#myModal.modal
  .modal-content
    span.close &times;
    form(action='/lesson/add' method='post')
      label(for='date') Date:
      input#date(type='datetime-local' name='date' step='3600' required='')
      br
      br
      label(for='student-name') Naam student:
      input#student-name(type='text' name='student_name' required='')
      br
      br
      label(for='examen') Is het een examen
      br
      input(type='radio' name='examen' value='1' required='')
      label(for='examen1') Ja
      br
      input(type='radio' name='examen' value='0')
      label(for='examen2') Nee
      br
      br
      label(for='description') Lesson Description:
      input#description(type='text' name='description' required='')
      br
      br
      label(for='goal') Lesson Goal:
      input#goal(type='text' name='goal' required='')
      br
      br
      label(for='pickup') Pickup Location:
      select#pickup(name='pickup')
        option(value='location1') Location 1
        option(value='location2') Location 2
        option(value='location3') Location 3
        option(value='location4') Location 4
      br
      br
      input(type='submit' value='Book Lesson')
.alternating-content.footer
  .footer-content
    .footer-contact
      h2 Contact details
      p Almere, Nederland
      a(href='tel:+31612345678') &#xF4DE; 06 1234 5678
      a(href='mailto:info@vierkantewielen.nl') &#x2709; info@vierkantewielen.nl
    .footer-legal
      p &copy; Copyright 2023
      a(href='documenten/voorwaarden.pdf') Algemene Voorwaarden
      a(href='documenten/privacybeleid.pdf') Privacybeleid
script.
  //Dit zorgt dat je allen toegestaande datums kan kiezen
  const picker = document.getElementById("date");
  var now = new Date();
  var nextMonday = new Date(
  now.getFullYear(),
  now.getMonth(),
  now.getDate() + ((7 - now.getDay()) % 7) + 1,
  8
  );
  var nextFriday = new Date(
  nextMonday.getFullYear(),
  nextMonday.getMonth(),
  nextMonday.getDate() + 4,
  18
  );
  // Format the dates to be compatible with the date input
  var nextMondayFormatted = nextMonday.toISOString().slice(0, 16);
  var nextFridayFormatted = nextFriday.toISOString().slice(0, 16);
  picker.min = nextMondayFormatted;
  picker.max = nextFridayFormatted;
  picker.addEventListener("change", function (e) {
  var selectedDate = new Date(this.value);
  if (selectedDate.getHours() < 8) {
  selectedDate.setHours(10);
  } else if (selectedDate.getHours() >= 19) {
  selectedDate.setHours(20);
  }
  var selectedDateFormatted =
  selectedDate.toISOString().slice(0, 14) + "00:00";
  this.value = selectedDateFormatted;
  console.log(selectedDateFormatted);
  var day = (selectedDate.getUTCDay() + 1) % 7;
  if ([1, 2, 3, 4, 5].includes(day)) {
  e.target.setCustomValidity("");
  } else {
  e.target.setCustomValidity("Weekends are not allowed");
  }
  });
  //Dit laat de modal zien
  var modal = document.getElementById("myModal");
  var btn = document.getElementById("openModal");
  var span = document.getElementsByClassName("close")[0];
  btn.onclick = function () {
  modal.style.display = "block";
  };
  span.onclick = function () {
  modal.style.display = "none";
  };
  window.onclick = function (event) {
  if (event.target == modal) {
  modal.style.display = "none";
  }
  };
  // Dit laat de lessen zien
  const newLes = [
  ["2023-06-15T16:00:00", "this is a test desc1"],
  ["2023-06-15T18:00:00", "this is a test desc2"],
  ["2023-06-16T10:00:00", "this is a test desc3"],
  ["2023-06-16T14:00:00", "this is a test desc4"],
  ];
  const roosterRooster = document.querySelector(".rooster-rooster");
  // Group lessons by day
  const groupedLessons = newLes.reduce((acc, [time, desc]) => {
  const day = new Date(time).toLocaleDateString();
  acc[day] = acc[day] || [];
  acc[day].push([time, desc]);
  return acc;
  }, {});
  for (const day in groupedLessons) {
  const dayDiv = document.createElement("div");
  dayDiv.classList.add("day");
  const dayHeader = document.createElement("div");
  dayHeader.textContent = day;
  dayDiv.appendChild(dayHeader);
  const lessons = groupedLessons[day];
  for (let i = 0; i < lessons.length; i++) {
  const [startTime, desc] = lessons[i];
  const startHour = new Date(startTime).getHours();
  let endTime = "";
  if (i < lessons.length - 1) {
  const nextStartTime = new Date(lessons[i + 1][0]);
  const nextHour = nextStartTime.getHours();
  endTime =
  nextStartTime.getMinutes() === 0
  ? `${nextHour}:00`
  : `${nextHour}:00`;
  } else {
  const lastLessonEndTime = new Date(startTime);
  lastLessonEndTime.setHours(lastLessonEndTime.getHours() + 1);
  endTime = `${lastLessonEndTime.getHours()}:00`;
  }
  const row = document.createElement("div");
  row.classList.add("lesson");
  const timeColumn = document.createElement("div");
  timeColumn.textContent = `${startHour}:00 - ${startHour + 1 + ":00"}`;
  row.appendChild(timeColumn);
  const descColumn = document.createElement("div");
  descColumn.textContent = desc;
  row.appendChild(descColumn);
  dayDiv.appendChild(row);
  }
  roosterRooster.appendChild(dayDiv);
  }
